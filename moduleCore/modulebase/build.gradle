apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.android['compileSdkVersion']

    defaultConfig {
        minSdkVersion rootProject.ext.android['minSdkVersion']
        targetSdkVersion rootProject.ext.android['targetSdkVersion']
        versionCode rootProject.ext.android['versionCode']
        versionName rootProject.ext.android['versionName']
        multiDexEnabled true

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "HTTP_BASE", "${rootProject.ext.project["releaseHttpBase"]}")
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "HTTP_BASE", "${rootProject.ext.project["debugHttpBase"]}")
        }
    }

    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding {
        enabled = true
    }

    lintOptions {
        disable 'GoogleAppIndexingWarning'
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api project(":moduleCore:mvvmbase")
    kapt rootProject.ext.dependencies['arouter-compiler']
    kapt rootProject.ext.dependencies['glide-compiler']
    debugApi rootProject.ext.dependencies['canary-debug']
    releaseApi rootProject.ext.dependencies['canary-release']

    api project(":modulePublic:easyPopup")
    api project(":modulePublic:x5webview")

}
